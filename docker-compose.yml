version: '3.8'
services:

  flask:
    build:
      context: app
      dockerfile: Dockerfile
    container_name: flask
    restart: unless-stopped
    environment:
      APP_ENV: "prod"
      APP_DEBUG: "False"
      APP_PORT: 5000
      MONGODB_DATABASE: searchapp
      MONGODB_USERNAME: user
      MONGODB_PASSWORD: password
      MONGODB_HOSTNAME: mongodb
      ELASTIC_HOST: http://elasticsearch:9200
    volumes:
      - appdata:/var/www
    depends_on:
      - elasticsearch
      - mongodb
    networks:
      - backend
      - elk

  mongodb:
    image: mongo:3.6.8
    container_name: mongodb
    restart: unless-stopped
    command: mongod --auth
    environment:
      MONGO_INITDB_ROOT_USERNAME: user
      MONGO_INITDB_ROOT_PASSWORD: password
      MONGO_INITDB_DATABASE: searchapp
      MONGODB_DATA_DIR: /data/db
      MONDODB_LOG_DIR: /dev/null
    volumes:
      - mongodbdata:/data/db
    networks:
      - backend

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.7
    container_name: elasticsearch
    volumes:
      - esdata:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
      - "9300:9300"
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    environment:
      - "discovery.type=single-node"
      - "cluster.name=elasticsearch"
      - "XPACK_SECURITY_ENABLED=false"
    networks:
      - elk
    healthcheck:
      test: "curl http://elasticsearch:9200"
      interval: "1s"
      timeout: "3s"
      retries: 60
  
  populate:
    build:
      context: populate
      dockerfile: init.Dockerfile
    restart: unless-stopped
    environment:
      APP_ENV: "prod"
      APP_DEBUG: "False"
      APP_PORT: 5001
      MONGODB_DATABASE: searchapp
      MONGODB_USERNAME: user
      MONGODB_PASSWORD: password
      MONGODB_HOSTNAME: mongodb
      ELASTIC_HOST: http://elasticsearch:9200
    volumes:
      - db_init_control:/.init_control
    depends_on:
      - elasticsearch
      - mongodb
    networks:
      - backend
      - elk

networks:
  backend:
    driver: bridge
  elk:
    driver: bridge

volumes:
  mongodbdata:
    driver: local
  appdata:
    driver: local
  esdata:
    driver: local
  db_init_control:
    driver: local
